@using Assignment.Core.Domain
@using Assignment.Web.Models
@model EditTaskViewModel
@{
    ViewBag.Title = "任务详情";
}

@if (Model != null)
{
    <h2>@ViewBag.Title</h2>
    <div class="row">
        <section id="newTaskForm">
            @using (Html.BeginForm("Update", "Task", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", role = "form" }))
            {
                @Html.HiddenFor(m => m.Id);
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Number, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Number, new { @class = "form-control", @readonly = true })
                        @Html.ValidationMessageFor(m => m.Number, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Name, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ExpBeginDate, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.ExpBeginDate, new { @class = "form-control formated-datetime-picker", @readonly = true, @data_format = "yyyy-mm-dd 00:00:00" })
                        @Html.ValidationMessageFor(m => m.ExpBeginDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ExpEndDate, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.ExpEndDate, new { @class = "form-control formated-datetime-picker", @readonly = true, @data_format = "yyyy-mm-dd 23:59:59" })
                        @Html.ValidationMessageFor(m => m.ExpEndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Priority, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.Priority, (IEnumerable<SelectListItem>)ViewBag.Priorities, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.AssignedTo, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.AssignedTo, (IEnumerable<SelectListItem>)ViewBag.Users, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AssignedTo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Desription, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => m.Desription, new { @class = "form-control", rows = "5" })
                        @Html.ValidationMessageFor(m => m.Desription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @if (ViewBag.IsAdmin)
                        {
                            if (Model.Status == TaskStatus.Finished)
                            {
                            <input value="任务已经完成，无法更新" class="btn btn-danger" disabled/>
                            }
                            else
                            {
                            <input type="submit" value="更新" class="btn btn-primary" />
                            }
                        }
                        <a class="btn btn-default" onclick="javascript: history.back();">返回</a>
                    </div>
                </div>
            }
        </section>
    </div>
    @Scripts.Render("~/bundles/datetimepicker")
}
else
{
    <h2>任务没有找到。</h2>
}